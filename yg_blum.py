__version__ = (1, 4, 8, 8)

# This file is a part of Hikka Userbot
# Code is NOT licensed under CC-BY-NC-ND 4.0 unless otherwise specified.
# üåê https://github.com/hikariatama/Hikka

# + –ø–æ—Å—Ö–∞–ª–∫–æ

# You CAN edit this file without direct permission from the author.
# You can redistribute this file with any modifications.

# meta developer: @yg_modules
# scope: hikka_only
# scope: hikka_min 1.6.3


# ‚£ø‚£ø‚£ø‚°∑‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ü‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£Ω‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
# ‚£ø‚£ø‚£ø‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°â‚¢ø‚£ø‚£ø‚£ø‚£ø
# ‚£π‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°õ‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†ª‚£ø‚°ü‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£Æ‚£Ω‚£ø‚£ø‚£ø
# ‚£ø‚£ø‚£ø‚£ù‚£ø‚£ø‚£ø‚£Ω‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£¶‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚£æ‚£ø‚£ø‚£Ñ‚†õ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ü‚£ù‚£ø‚£ø‚£ø
# ‚£ø‚£ø‚¢∑‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚¢∑‚£ø‚£ø‚£Ø‚¢ç‚¢ª‚£ø‚£∑‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£æ‚°ø‚†õ‚†ª‚†õ‚¢ø‚°á‚¢π‚£ø‚£ø‚£ø‚£ø‚£ø‚£≥‚£Ω‚£ø‚£ø‚£ø
# ‚°ª‚†ü‚†à‚¢õ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ü‚£æ‚£ø‚£ø‚£ø‚£∑‚£º‚£ø‚£ø‚£ø‚£¶‚£§‚°Ä‚†Ñ‚†Ä‚†Ä‚†∞‚†Ä‚¢Ä‚£§‚£¥‚£ø‚£ø‚£∂‚£ß‚£§‚£Ñ‚£§‚£©‚¢∏‚£ø‚£ø‚£ø‚£ø‚°Ø‚¢ç‚£ø‚£ø‚£ø‚£ø
# ‚†Ä‚†Ä‚†Ä‚†Ä‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚¢º‚£ø‚£ø‚£ø‚†ã‚£Ω‚°ü‚£ø‚£ø‚£ø‚£ø‚£ø‚£ß‚†Ä‚†Ä‚¢∏‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚¢ø‚¢ø‚£ø‚£ø‚£ø‚°ü‚¢∏‚£ø‚£ø‚£ø‚£ø‚£∑‚°ö‚¢ø‚£ø‚£ø‚£ø
# ‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚¢â‚£ø‚£ø‚£ø‚£ø‚†É‚†ú‚†ª‚¢ø‚£ø‚£æ‚£ß‚£ã‚£ø‚£ø‚£ø‚£ø‚†ª‚†í‚†Ç‚†Ä‚¢∫‚£ø‚£ø‚£ø‚£ß‚£ß‚£õ‚¢∞‚¢º‚£æ‚£ø‚£ø‚†É‚†ò‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°è‚£ø‚£ø‚£ø
# ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ª‚£ø‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†â‚†π‚†ø‚†ø‚¢ø‚£ø‚£ø‚†ø‚†ª‚†≥‚†Å‚†Ä‚†Ä‚†ò‚°ø‚£ø‚£ø‚£ø‚†ø‚£ø‚¢ø‚¢≠‚°Ñ‚††‚†á‚†ç‚£Ä‚£ø‚£ø‚£ø‚°â‚£©‚†û‚¢∏‚£ø‚£ø‚£ø
# ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ø‚£ø‚£ø‚†à‚£°‚¢Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚£∂‚†¶‚†Ä‚†Ä‚†Ä‚†Ä‚£à‚£é‚†Ä‚†à‚†Ä‚†à‚†Ä‚†Ä‚†Ä‚£Ä‚£†‚¢¥‚†Ω‚£ø‚£ø‚£ü‚¢è‚†Ç‚†Ä‚¢º‚£ø‚£ø‚£ø
# ‚†Ä‚†Å‚†Ä‚£†‚†Ç‚†Ä‚†Ä‚¢°‚¢º‚£è‚£æ‚£Ø‚†à‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚°ñ‚°ø‚†â‚†É‚†Ä‚†Ä‚†Ä‚†à‚°ú‚†â‚¢ª‚£∂‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚£∂‚°ü‚£®‚£ø‚£ø‚°ø‚£ü‚£ø‚¢ø‚£ø‚£ø‚°ü‚£ø‚°ø
# ‚†Ä‚†Ä‚†í‚†ã‚†Ä‚†Ä‚†Ä‚¢Ä‚†®‚¢õ‚°ø‚¢ª‚°Ü‚†Ä‚†Ä‚£†‚£¥‚†ü‚†Å‚†ò‚£º‚£§‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£¢‚£§‚£ø‚†â‚†ô‚¢∑‚£Ü‚°Ä‚†∞‚£ø‚£æ‚£ø‚£ø‚°è‚¢ª‚°ø‚†â‚£≠‚¢†‚†Ä‚¢ò‚£ø‚¢ø
# ‚†Ä‚£§‚††‚£Ä‚¢Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£µ‚†º‚£ø‚£∑‚£∂‚£ø‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†à‚¢ª‚£ø‚£Ü‚†Ä‚†Ä‚£Ä‚£ø‚†ü‚†ì‚†Ä‚†Ä‚†Ä‚£Ω‚£ø‚£ø‚£ø‚£ø‚£ø‚¢ø‚¢Ä‚°ø‚†Ä‚¢Ä‚£∞‚£§‚£†‚£∂‚£æ‚£ø
# ‚£ø‚†ü‚¢ª‚£ø‚£ø‚†Ä‚†Ä‚¢à‚†Ä‚†Ω‚†Ä‚†ò‚†ø‚£ø‚£ø‚£ø‚£ø‚£Ä‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚¢ø‚†õ‚†õ‚†Å‚†Ä‚†Ä‚¢Ä‚£†‚£º‚£ø‚£ø‚£ø‚£ø‚£ø‚£è‚£ø‚†ã‚†Ä‚°†‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
# ‚†â‚†Ä‚£¥‚¢¥‚†ü‚£§‚†Ü‚†Ä‚£î‚°Ä‚£Ñ‚†Ä‚†Ä‚†à‚†ò‚°ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∂‚£∂‚£§‚£Ñ‚£§‚£§‚£¥‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚°ü‚¢ª‚†ø‚£ø‚£π‚†É‚†§‚£¥‚¢∑‚°ô‚£ø‚£ø‚£ø‚¢ø‚£ø‚£ø
# ‚†Ä‚†Ä‚¢∏‚£Ñ‚£†‚£Ñ‚°Ä‚†Ä‚†ø‚†õ‚¢Å‚††‚††‚†Ä‚¢Ä‚†Å‚†à‚£ø‚£ø‚£ø‚°ç‚†ö‚†ò‚†ã‚†ô‚°ô‚†â‚†è‚†É‚¢®‚£ø‚£ø‚£ø‚£ø‚°Ç‚†à‚£∏‚£∑‚¢ã‚¢≥‚£û‚†±‚†ê‚£ø‚£æ‚£ø‚£ü‚£¨‚£ø‚£ø
# ‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ø‚†Ω‚†Ä‚¢Ä‚†Ä‚†Ä‚†Ä‚£Ñ‚°Ñ‚¢∏‚£Ü‚†Ä‚¢π‚£ø‚£ø‚£ø‚†¥‚†Ä‚†Ä‚†Ä‚†á‚†Ä‚†Ñ‚†≤‚¢ª‚£ø‚£ø‚£ø‚£ø‚°è‚†Å‚£ø‚°è‚£º‚°æ‚¢â‚£Ä‚£≤‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
# ‚†Ä‚¢Ä‚¢Ä‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚¢†‚£§‚°†‚¢ø‚£¥‚°Ü‚¢ª‚£¶‚†Ä‚¢ª‚£ø‚£ø‚£∂‚£§‚£§‚£Ä‚£Ä‚°Ä‚£Ñ‚£º‚£ø‚£ø‚£ø‚£ø‚£ø‚†á‚£∏‚°ø‚£Å‚†ü‚¢µ‚¢ø‚£ø‚£ø‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
# ‚†∞‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£¥‚£ø‚£∑‚£ø‚£ø‚£ø‚°å‚¢ø‚°Ü‚†Ä‚†ô‚¢ø‚£∑‚£Å‚†â‚†â‚†â‚†â‚£â‚£Ω‚°ø‚¢ã‚£ø‚£æ‚£ø‚£∞‚†á‚£º‚£ø‚£Ü‚°∏‚£Ø‚£ü‚£∑‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
# ‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†Å‚†Ä‚†Ä‚£©‚£æ‚£ø‚£ø‚°á‚£ø‚£ø‚£ø‚£ø‚£ø‚°Ñ‚°Ä‚†Ä‚†Ä‚†â‚†â‚†Å‚†Å‚††‚†õ‚†õ‚†Å‚†ä‚£ø‚£ø‚£ø‚£ü‚£ø‚£ø‚£ø‚£ø‚¢∑‚°ø‚£è‚¢æ‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
# ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£æ‚£ø‚£ø‚£ø‚£ø‚£∑‚£ø‚£ø‚£ø‚£ø‚°â‚¢ª‚°Ä‚†Ä‚†Ä‚£Ä‚£§‚£§‚°§‚†¥‚†í‚†ã‚†Å‚¢†‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£æ‚£Ω‚£ø‚£ø‚£ø‚¢ø‚£ø
# ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ç‚†§‚†§‚†§‚†§‚†Ñ‚†Ä‚†Ä‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ç‚£∑‚†æ‚°ø‚¢ø‚¢æ‚£ø
# ‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∂‚£±‚¢ù‚¢∫‚£ø
# ‚£∞‚£Ç‚¢¶‚£¥‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ò‚£Ü‚†Ä‚†Ä‚†Ä‚†ò‚†Ä‚†Ä‚†Ä‚†Ä‚£à‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
# ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£Ω‚£¶‚£§‚£†‚£¥‚†Ä‚°§‚£†‚£∂‚£¶‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø

from telethon.tl.functions.messages import RequestWebViewRequest
from urllib.parse import unquote
import requests as req
import json
import time
import random
from fake_useragent import UserAgent
import aiohttp

from .. import loader

@loader.tds
class yg_blum(loader.Module):
    """–ò–≥—Ä–∞–µ—Ç –≤ –∏–≥—Ä—ã –≤ @BlumCryptoBot (–ó–∞ 1 –∏–≥—Ä—É –≤—ã–¥–∞—ë—Ç 230 - 240 $BLUM)"""

    strings = {"name": "yg_blum"}

    async def client_ready(self, client, db):
        self.client = client
        headers = {'User-Agent': UserAgent(os='android').random}
        self.session = aiohttp.ClientSession(headers=headers, trust_env=True)

    async def get_tg_web_data(self):
        web_view = await self.client(RequestWebViewRequest(
            peer='BlumCryptoBot',
            bot='BlumCryptoBot',
            platform='android',
            from_bot_menu=False,
            url='https://telegram.blum.codes/'
        ))

        auth_url = web_view.url
        return unquote(auth_url.split('tgWebAppData=')[1].split('&tgWebAppVersion')[0])

    async def login(self):
        json_data = {"query": await self.get_tg_web_data()}

        resp = await self.session.post("https://gateway.blum.codes/v1/auth/provider/PROVIDER_TELEGRAM_MINI_APP", json=json_data)
        resp_json = await resp.json()

        token = resp_json.get("token").get("access")
        return "Bearer" + token

    async def blumcmd(self, message):
        """–∏–≥—Ä–∞–µ—Ç –Ω–∞ –≤—Å–µ –≤–∞—à–∏ –±–∏–ª–µ—Ç—ã, –∏ –≤ –∫–æ–Ω—Ü–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–∫–æ–ª—å–∫–æ –≤ –∏—Ç–æ–≥–µ –≤—ã—à–ª–æ"""
        token = await self.login()
        head = {
            'Authorization': token,
            'Accept': 'application/json',
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0'
        }
        resp = req.get('https://game-domain.blum.codes/api/v1/user/balance', headers=head)
        count = json.loads(resp.text)['playPasses']
        total_point = 0
        if count != 0:
            await message.edit("<emoji document_id=5371057462088570593>üòã</emoji> <b>–ù–∞—á–∞–ª –∏–≥—Ä–∞—Ç—å...</b>")
            for i in range(count):
                post_id = req.post('https://game-domain.blum.codes/api/v1/game/play', headers=head)
                game_id = json.loads(post_id.text)['gameId']
                time.sleep(random.randrange(30, 60, 5))
                points = random.randint(150, 250)
                req.post('https://game-domain.blum.codes/api/v1/game/claim', headers=head, json={
                    "gameId": game_id, "points": points})
                await message.edit(f'<emoji document_id=5852496924870971453>üêæ</emoji> <b>{i + 1} / {count} –∏–≥—Ä</b>')
                time.sleep(random.randint(1, 5))
                total_point += points
            await message.edit(f"<emoji document_id=5350746136544037083>ü§ë</emoji> <b>–í—Å–µ–≥–æ –∑–∞—Ñ–∞—Ä–º–ª–µ–Ω–Ω–æ $BLUM:</b> <code>{total_point}</code>")
        else:
            await message.edit("<emoji document_id=5460972181523537679>üòû</emoji> <b>–ù–µ—Ç—É –±–∏–ª–µ—Ç–æ–≤ –¥–ª—è –∏–≥—Ä—ã :(</b>")