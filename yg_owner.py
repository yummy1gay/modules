
__version__ = (1, 0, 0, 1)

# This file is a part of Hikka Userbot
# Code is NOT licensed under CC-BY-NC-ND 4.0 unless otherwise specified.
# üåê https://github.com/hikariatama/Hikka

# You CAN edit this file without direct permission from the author.
# You can redistribute this file with any modifications.

# meta developer: @yg_modules
# scope: hikka_only
# scope: hikka_min 1.6.3

# ‚ñà‚ñÑ‚ñà‚ÄÉ‚ñà‚ñë‚ñà‚ÄÉ‚ñà‚ñÄ‚ñÑ‚ñÄ‚ñà‚ÄÉ‚ñà‚ñÄ‚ñÑ‚ñÄ‚ñà‚ÄÉ‚ñà‚ñÑ‚ñà‚ÄÉ ‚ÄÉ‚ñà‚ñÄ‚ñÑ‚ñÄ‚ñà‚ÄÉ‚ñà‚ñÄ‚ñà‚ÄÉ‚ñà‚ñÄ‚ñÑ‚ÄÉ‚ñà‚ñÄ
# ‚ñë‚ñà‚ñë‚ÄÉ‚ñà‚ñÑ‚ñà‚ÄÉ‚ñà‚ñë‚ñÄ‚ñë‚ñà‚ÄÉ‚ñà‚ñë‚ñÄ‚ñë‚ñà‚ÄÉ‚ñë‚ñà‚ñë‚ÄÉ ‚ÄÉ‚ñà‚ñë‚ñÄ‚ñë‚ñà‚ÄÉ‚ñà‚ñÑ‚ñà‚ÄÉ‚ñà‚ñÑ‚ñÄ‚ÄÉ‚ñÑ‚ñà

import re
from telethon.tl.types import MessageEntityCustomEmoji
from telethon.tl.types import DocumentAttributeSticker
from telethon.tl.functions.messages import GetStickerSetRequest
from telethon.tl.functions.messages import GetCustomEmojiDocumentsRequest
from telethon.tl.functions.messages import GetInlineBotResultsRequest

from .. import loader

@loader.tds
class yg_owner(loader.Module):
	"""–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–ª–∞–¥–µ–ª—å—Ü–µ —Å—Ç–∏–∫–µ—Ä/—ç–º–æ–¥–∑–∏ –ø–∞–∫–∞"""

	strings = {"name": "yg_owner"}

	async def ownercmd(self, msg):
		"""<reply to sticker/premium emoji> - —É–∑–Ω–∞—Ç—å –æ–≤–Ω–µ—Ä–∞ –ø–∞–∫–∞"""
		if not msg.reply_to_msg_id:
			await msg.edit("<emoji document_id=5210952531676504517>‚ùå</emoji> <i>–û—Ç–≤–µ—Ç—å –Ω–∞ —Å—Ç–∏–∫–µ—Ä –∏–ª–∏ —ç–º–æ–¥–∑–∏, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é</i>")
			return
		
		await msg.edit("<emoji document_id=4988080790286894217>ü´•</emoji> <b>–ü–æ–ª—É—á–∞—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é...</b>")

		reply = await msg.get_reply_message()

		if reply.sticker:
			if reply.media and reply.media.document and isinstance(reply.media.document.attributes[1], DocumentAttributeSticker):
				await self.sticker(reply, msg)
				return

		elif reply.entities:
			if isinstance(reply.entities[0], MessageEntityCustomEmoji):
				await self.emoji(reply, msg)
				return

		await msg.edit("<emoji document_id=5210952531676504517>‚ùå</emoji> <i>–û—Ç–≤–µ—Ç—å –Ω–∞ —Å—Ç–∏–∫–µ—Ä –∏–ª–∏ —ç–º–æ–¥–∑–∏, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é</i>")

	async def sticker(self, reply, msg):
		id = reply.media.document.attributes[1].stickerset.id >> 32
		set = await msg.client(GetStickerSetRequest(
			stickerset=reply.media.document.attributes[1].stickerset,
			hash=0
		))

		link = f"t.me/addemoji/{set.set.short_name}"
		await self.info(id, link, msg)

	async def emoji(self, reply, msg):
		id = reply.entities[0].document_id
		data = await msg.client(GetCustomEmojiDocumentsRequest(
			document_id=[id]
		))

		set = data[0].attributes[1].stickerset
		pack = await msg.client(GetStickerSetRequest(stickerset=set, hash=0))
		link = f"t.me/addemoji/{pack.set.short_name}"
		set_id = set.id >> 32
		await self.info(set_id, link, msg)

	async def info(self, id, link, msg):
		call = await msg.client(GetInlineBotResultsRequest(
			peer='me',
			offset='0',
			bot='usinfobot',
			query=str(id)
		))

		if call.results:
			result = call.results[0]
			name, username = self.extract(result)

			if name and username:
				await msg.edit(f"<b>–ü–∞–∫: {link}</b>\n"
				               f"<b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –≤–ª–∞–¥–µ–ª—å—Ü–µ:</b>\n\n"
						       f"‚Ä¢ <b>UserID:</b> <code>‚Å£{id}</code>\n"
							   f"‚Ä¢ <b>‚Å£Name:</b> <code>{name}</code>\n"
							   f"‚Ä¢ <b>‚Å£Username:</b> <b>@{username}</b>")
			else:
				await msg.edit(f"<b>–ü–∞–∫: {link}</b>\n"
				               f"<b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –≤–ª–∞–¥–µ–ª—å—Ü–µ:</b>\n\n"
						       f"‚Ä¢ <b>UserID:</b> <code>‚Å£{id}</code>\n"
							   f"‚Ä¢ <b>‚Å£Name:</b> <code>–Ω–µ –Ω–∞–π–¥–µ–Ω–æ</code>\n"
							   f"‚Ä¢ <b>‚Å£Username:</b> <code>–Ω–µ –Ω–∞–π–¥–µ–Ω–æ</code>")
		else:
			await msg.edit("<emoji document_id=5210952531676504517>‚ùå</emoji> <b>–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–ª–∞–¥–µ–ª—å—Ü–µ</b>")

	def extract(self, result):
		name, username = None, None

		name_match = re.search(r"üë¶üèª\s*(.*?)\n", result.send_message.message)
		username_match = re.search(r"üåê\s*@([\w_]+)\n", result.send_message.message)

		if name_match:
			name = name_match.group(1).strip()

		if username_match:
			username = username_match.group(1).strip()

		return name, username