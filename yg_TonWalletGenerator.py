__version__ = (1, 4, 8, 8)

# This file is a part of Hikka Userbot
# Code is NOT licensed under CC-BY-NC-ND 4.0 unless otherwise specified.
# üåê https://github.com/hikariatama/Hikka

# + –ø–æ—Å—Ö–∞–ª–∫–æ

# You CAN edit this file without direct permission from the author.
# You can redistribute this file with any modifications.

# meta developer: @yg_modules
# scope: hikka_only
# scope: hikka_min 1.6.3

# ‚£ø‚£ø‚£ø‚°∑‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ü‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£Ω‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
# ‚£ø‚£ø‚£ø‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°â‚¢ø‚£ø‚£ø‚£ø‚£ø
# ‚£π‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°õ‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†ª‚£ø‚°ü‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£Æ‚£Ω‚£ø‚£ø‚£ø
# ‚£ø‚£ø‚£ø‚£ù‚£ø‚£ø‚£ø‚£Ω‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£¶‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚£æ‚£ø‚£ø‚£Ñ‚†õ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ü‚£ù‚£ø‚£ø‚£ø
# ‚£ø‚£ø‚¢∑‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚¢∑‚£ø‚£ø‚£Ø‚¢ç‚¢ª‚£ø‚£∑‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£æ‚°ø‚†õ‚†ª‚†õ‚¢ø‚°á‚¢π‚£ø‚£ø‚£ø‚£ø‚£ø‚£≥‚£Ω‚£ø‚£ø‚£ø
# ‚°ª‚†ü‚†à‚¢õ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ü‚£æ‚£ø‚£ø‚£ø‚£∑‚£º‚£ø‚£ø‚£ø‚£¶‚£§‚°Ä‚†Ñ‚†Ä‚†Ä‚†∞‚†Ä‚¢Ä‚£§‚£¥‚£ø‚£ø‚£∂‚£ß‚£§‚£Ñ‚£§‚£©‚¢∏‚£ø‚£ø‚£ø‚£ø‚°Ø‚¢ç‚£ø‚£ø‚£ø‚£ø
# ‚†Ä‚†Ä‚†Ä‚†Ä‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚¢º‚£ø‚£ø‚£ø‚†ã‚£Ω‚°ü‚£ø‚£ø‚£ø‚£ø‚£ø‚£ß‚†Ä‚†Ä‚¢∏‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚¢ø‚¢ø‚£ø‚£ø‚£ø‚°ü‚¢∏‚£ø‚£ø‚£ø‚£ø‚£∑‚°ö‚¢ø‚£ø‚£ø‚£ø
# ‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚¢â‚£ø‚£ø‚£ø‚£ø‚†É‚†ú‚†ª‚¢ø‚£ø‚£æ‚£ß‚£ã‚£ø‚£ø‚£ø‚£ø‚†ª‚†í‚†Ç‚†Ä‚¢∫‚£ø‚£ø‚£ø‚£ß‚£ß‚£õ‚¢∞‚¢º‚£æ‚£ø‚£ø‚†É‚†ò‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°è‚£ø‚£ø‚£ø
# ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ª‚£ø‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†â‚†π‚†ø‚†ø‚¢ø‚£ø‚£ø‚†ø‚†ª‚†≥‚†Å‚†Ä‚†Ä‚†ò‚°ø‚£ø‚£ø‚£ø‚†ø‚£ø‚¢ø‚¢≠‚°Ñ‚††‚†á‚†ç‚£Ä‚£ø‚£ø‚£ø‚°â‚£©‚†û‚¢∏‚£ø‚£ø‚£ø
# ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ø‚£ø‚£ø‚†à‚£°‚¢Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚£∂‚†¶‚†Ä‚†Ä‚†Ä‚†Ä‚£à‚£é‚†Ä‚†à‚†Ä‚†à‚†Ä‚†Ä‚†Ä‚£Ä‚£†‚¢¥‚†Ω‚£ø‚£ø‚£ü‚¢è‚†Ç‚†Ä‚¢º‚£ø‚£ø‚£ø
# ‚†Ä‚†Å‚†Ä‚£†‚†Ç‚†Ä‚†Ä‚¢°‚¢º‚£è‚£æ‚£Ø‚†à‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚°ñ‚°ø‚†â‚†É‚†Ä‚†Ä‚†Ä‚†à‚°ú‚†â‚¢ª‚£∂‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚£∂‚°ü‚£®‚£ø‚£ø‚°ø‚£ü‚£ø‚¢ø‚£ø‚£ø‚°ü‚£ø‚°ø
# ‚†Ä‚†Ä‚†í‚†ã‚†Ä‚†Ä‚†Ä‚¢Ä‚†®‚¢õ‚°ø‚¢ª‚°Ü‚†Ä‚†Ä‚£†‚£¥‚†ü‚†Å‚†ò‚£º‚£§‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£¢‚£§‚£ø‚†â‚†ô‚¢∑‚£Ü‚°Ä‚†∞‚£ø‚£æ‚£ø‚£ø‚°è‚¢ª‚°ø‚†â‚£≠‚¢†‚†Ä‚¢ò‚£ø‚¢ø
# ‚†Ä‚£§‚††‚£Ä‚¢Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£µ‚†º‚£ø‚£∑‚£∂‚£ø‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†à‚¢ª‚£ø‚£Ü‚†Ä‚†Ä‚£Ä‚£ø‚†ü‚†ì‚†Ä‚†Ä‚†Ä‚£Ω‚£ø‚£ø‚£ø‚£ø‚£ø‚¢ø‚¢Ä‚°ø‚†Ä‚¢Ä‚£∞‚£§‚£†‚£∂‚£æ‚£ø
# ‚£ø‚†ü‚¢ª‚£ø‚£ø‚†Ä‚†Ä‚¢à‚†Ä‚†Ω‚†Ä‚†ò‚†ø‚£ø‚£ø‚£ø‚£ø‚£Ä‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚¢ø‚†õ‚†õ‚†Å‚†Ä‚†Ä‚¢Ä‚£†‚£º‚£ø‚£ø‚£ø‚£ø‚£ø‚£è‚£ø‚†ã‚†Ä‚°†‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
# ‚†â‚†Ä‚£¥‚¢¥‚†ü‚£§‚†Ü‚†Ä‚£î‚°Ä‚£Ñ‚†Ä‚†Ä‚†à‚†ò‚°ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∂‚£∂‚£§‚£Ñ‚£§‚£§‚£¥‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚°ü‚¢ª‚†ø‚£ø‚£π‚†É‚†§‚£¥‚¢∑‚°ô‚£ø‚£ø‚£ø‚¢ø‚£ø‚£ø
# ‚†Ä‚†Ä‚¢∏‚£Ñ‚£†‚£Ñ‚°Ä‚†Ä‚†ø‚†õ‚¢Å‚††‚††‚†Ä‚¢Ä‚†Å‚†à‚£ø‚£ø‚£ø‚°ç‚†ö‚†ò‚†ã‚†ô‚°ô‚†â‚†è‚†É‚¢®‚£ø‚£ø‚£ø‚£ø‚°Ç‚†à‚£∏‚£∑‚¢ã‚¢≥‚£û‚†±‚†ê‚£ø‚£æ‚£ø‚£ü‚£¨‚£ø‚£ø
# ‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ø‚†Ω‚†Ä‚¢Ä‚†Ä‚†Ä‚†Ä‚£Ñ‚°Ñ‚¢∏‚£Ü‚†Ä‚¢π‚£ø‚£ø‚£ø‚†¥‚†Ä‚†Ä‚†Ä‚†á‚†Ä‚†Ñ‚†≤‚¢ª‚£ø‚£ø‚£ø‚£ø‚°è‚†Å‚£ø‚°è‚£º‚°æ‚¢â‚£Ä‚£≤‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
# ‚†Ä‚¢Ä‚¢Ä‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚¢†‚£§‚°†‚¢ø‚£¥‚°Ü‚¢ª‚£¶‚†Ä‚¢ª‚£ø‚£ø‚£∂‚£§‚£§‚£Ä‚£Ä‚°Ä‚£Ñ‚£º‚£ø‚£ø‚£ø‚£ø‚£ø‚†á‚£∏‚°ø‚£Å‚†ü‚¢µ‚¢ø‚£ø‚£ø‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
# ‚†∞‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£¥‚£ø‚£∑‚£ø‚£ø‚£ø‚°å‚¢ø‚°Ü‚†Ä‚†ô‚¢ø‚£∑‚£Å‚†â‚†â‚†â‚†â‚£â‚£Ω‚°ø‚¢ã‚£ø‚£æ‚£ø‚£∞‚†á‚£º‚£ø‚£Ü‚°∏‚£Ø‚£ü‚£∑‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
# ‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†Å‚†Ä‚†Ä‚£©‚£æ‚£ø‚£ø‚°á‚£ø‚£ø‚£ø‚£ø‚£ø‚°Ñ‚°Ä‚†Ä‚†Ä‚†â‚†â‚†Å‚†Å‚††‚†õ‚†õ‚†Å‚†ä‚£ø‚£ø‚£ø‚£ü‚£ø‚£ø‚£ø‚£ø‚¢∑‚°ø‚£è‚¢æ‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
# ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£æ‚£ø‚£ø‚£ø‚£ø‚£∑‚£ø‚£ø‚£ø‚£ø‚°â‚¢ª‚°Ä‚†Ä‚†Ä‚£Ä‚£§‚£§‚°§‚†¥‚†í‚†ã‚†Å‚¢†‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£æ‚£Ω‚£ø‚£ø‚£ø‚¢ø‚£ø
# ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ç‚†§‚†§‚†§‚†§‚†Ñ‚†Ä‚†Ä‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ç‚£∑‚†æ‚°ø‚¢ø‚¢æ‚£ø
# ‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∂‚£±‚¢ù‚¢∫‚£ø
# ‚£∞‚£Ç‚¢¶‚£¥‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ò‚£Ü‚†Ä‚†Ä‚†Ä‚†ò‚†Ä‚†Ä‚†Ä‚†Ä‚£à‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
# ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£Ω‚£¶‚£§‚£†‚£¥‚†Ä‚°§‚£†‚£∂‚£¶‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø

import logging
from tonsdk.contract.wallet import Wallets, WalletVersionEnum
from .. import loader

@loader.tds
class TonWalletGenerator(loader.Module):
    """–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä TON –∫–æ—à–µ–ª—å–∫–æ–≤"""

    strings = {"name": "yg_TonWalletGenerator"}

    async def client_ready(self, client, db):
        self.client = client

    async def gencmd(self, message):
        """–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –Ω–æ–≤—ã–π TON –∫–æ—à–µ–ª–µ–∫"""
        try:
            mnemonics, pub_k, priv_k, wallet = Wallets.create(WalletVersionEnum.v4r2, workchain=0)
            wallet_address = wallet.address.to_string(True, True, False)
            
            half = len(mnemonics) // 2
            first_half = mnemonics[:half]
            second_half = mnemonics[half:]
            
            max_len = max(len(word) for word in mnemonics) + 2
            
            mnemonics_str = ''
            for i in range(half):
                first_index = i + 1
                second_index = half + i + 1
                if first_index < 10:
                    mnemonics_str += f"{first_index}. {first_half[i].ljust(max_len)} {second_index}. {second_half[i]}\n"
                else:
                    mnemonics_str += f"{first_index}. {first_half[i].ljust(max_len)}{second_index}. {second_half[i]}\n"
            
            mnemonics_copy = ' '.join(mnemonics)
            
            response = (
                f"<b>–ê–¥—Ä–µ—Å:</b>\n<code>{wallet_address}</code>\n\n"
                f"<b>–°–∏–¥-—Ñ—Ä–∞–∑–∞:</b>\n<pre>{mnemonics_str}</pre>\n"
                f"<b>–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å:</b> <code>{mnemonics_copy}</code>"
            )

            await message.edit(response)
        except Exception as e:
            logging.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ—à–µ–ª—å–∫–∞")
            await message.edit("<b>–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ—à–µ–ª—å–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑</b>")