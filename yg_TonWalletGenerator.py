__version__ = (1, 4, 8, 8)

# This file is a part of Hikka Userbot
# Code is NOT licensed under CC-BY-NC-ND 4.0 unless otherwise specified.
# üåê https://github.com/hikariatama/Hikka

# You CAN edit this file without direct permission from the author.
# You can redistribute this file with any modifications.

# meta developer: @yg_modules
# scope: hikka_only
# scope: hikka_min 1.6.3

# ‚ñà‚ñÑ‚ñà‚ÄÉ‚ñà‚ñë‚ñà‚ÄÉ‚ñà‚ñÄ‚ñÑ‚ñÄ‚ñà‚ÄÉ‚ñà‚ñÄ‚ñÑ‚ñÄ‚ñà‚ÄÉ‚ñà‚ñÑ‚ñà‚ÄÉ ‚ÄÉ‚ñà‚ñÄ‚ñÑ‚ñÄ‚ñà‚ÄÉ‚ñà‚ñÄ‚ñà‚ÄÉ‚ñà‚ñÄ‚ñÑ‚ÄÉ‚ñà‚ñÄ
# ‚ñë‚ñà‚ñë‚ÄÉ‚ñà‚ñÑ‚ñà‚ÄÉ‚ñà‚ñë‚ñÄ‚ñë‚ñà‚ÄÉ‚ñà‚ñë‚ñÄ‚ñë‚ñà‚ÄÉ‚ñë‚ñà‚ñë‚ÄÉ ‚ÄÉ‚ñà‚ñë‚ñÄ‚ñë‚ñà‚ÄÉ‚ñà‚ñÑ‚ñà‚ÄÉ‚ñà‚ñÑ‚ñÄ‚ÄÉ‚ñÑ‚ñà

import logging
from tonsdk.contract.wallet import Wallets, WalletVersionEnum

from .. import loader, utils

@loader.tds
class TonWalletGenerator(loader.Module):
    """–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä TON –∫–æ—à–µ–ª—å–∫–æ–≤"""

    strings = {"name": "yg_TonWalletGenerator"}

    async def client_ready(self, client, db):
        self.client = client

    async def gencmd(self, message):
        """<count> –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ–¥–∏–Ω –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ TON –∫–æ—à–µ–ª—å–∫–æ–≤"""
        try:
            args = utils.get_args_raw(message).strip()
            if args:
                try:
                    count = int(args)
                    chozabretto = self.gcd(count)
                    tmp = await message.edit(f"<emoji document_id=5431449001532594346>‚ö°Ô∏è</emoji> <b>–ì–µ–Ω–µ—Ä–∏—Ä—É—é {count} {chozabretto}...</b>")
                    if count < 2 or count > 200:
                        raise ValueError
                except ValueError:
                    await message.edit("<emoji document_id=5465665476971471368>‚ùå</emoji> <b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ—à–µ–ª—å–∫–æ–≤. –î–æ–ø—É—Å—Ç–∏–º—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω: –æ—Ç 2 –¥–æ 200.</b>\n\n<emoji document_id=5472164874886846699>‚ú®</emoji> <i>–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ–¥–∏–Ω –∫–æ—à–µ–ª–µ–∫ —Ç–æ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ</i> <code>.gen</code>")
                    return
            else:
                kok = await message.edit("<emoji document_id=5431449001532594346>‚ö°Ô∏è</emoji> <b>–ì–µ–Ω–µ—Ä–∏—Ä—É—é...</b>")
                count = 1

            wallets_info = []
            for _ in range(count):
                mnemonics, pub_k, priv_k, wallet = Wallets.create(WalletVersionEnum.v4r2, workchain=0)
                wallet_address = wallet.address.to_string(True, True, False)
                wallets_info.append((wallet_address, ' '.join(mnemonics)))

            if count == 1:
                half = len(wallets_info[0][1].split()) // 2
                first_half = wallets_info[0][1].split()[:half]
                second_half = wallets_info[0][1].split()[half:]

                max_len = max(len(word) for word in wallets_info[0][1].split()) + 2

                mnemonics_str = ''
                for i in range(half):
                    first_index = i + 1
                    second_index = half + i + 1
                    if first_index < 10:
                        mnemonics_str += f"{first_index}. {first_half[i].ljust(max_len)} {second_index}. {second_half[i]}\n"
                    else:
                        mnemonics_str += f"{first_index}. {first_half[i].ljust(max_len)}{second_index}. {second_half[i]}\n"

                response = (
                    f"<b>–ê–¥—Ä–µ—Å:</b>\n<code>{wallets_info[0][0]}</code>\n\n"
                    f"<b>–°–∏–¥-—Ñ—Ä–∞–∑–∞:</b>\n<pre>{mnemonics_str}</pre>\n"
                    f"\n<b>–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å:</b> <code>{wallets_info[0][1]}</code>"
                )
                await kok.edit(response)
            else:
                wallet_info = "\n\n".join(f"{i+1}. –ê–¥—Ä–µ—Å: {addr}\n   –°–∏–¥-—Ñ—Ä–∞–∑–∞: {seed}" for i, (addr, seed) in enumerate(wallets_info))
                with open("wallets.txt", "w", encoding="utf-8") as f:
                    f.write(wallet_info)

                chozabretto = self.gcd(count)
                caption = f"<emoji document_id=5370869711888194012>üëæ</emoji> <b>–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ {count} {chozabretto}</b>"
                await self.client.send_file(message.peer_id, "wallets.txt", caption=caption)
                await tmp.delete()
        except Exception as e:
            logging.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ—à–µ–ª—å–∫–∞")
            await message.edit("<emoji document_id=5465665476971471368>‚ùå</emoji> <b>–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ—à–µ–ª—å–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑</b>")

    def gcd(self, count):
        if 11 <= count % 100 <= 14:
            return "–∫–æ—à–µ–ª—å–∫–æ–≤"
        last_digit = count % 10
        if last_digit == 1:
            return "–∫–æ—à–µ–ª–µ–∫"
        elif 2 <= last_digit <= 4:
            return "–∫–æ—à–µ–ª—å–∫–∞"
        else:
            return "–∫–æ—à–µ–ª—å–∫–æ–≤"